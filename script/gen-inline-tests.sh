#!/usr/bin/env bash


script_dir="$(dirname "${BASH_SOURCE[0]}")"
root_dir="$(dirname "${script_dir}")"
cache=()

each_file() {
    src_file="${1}"
    id="$(echo "${src_file#${root_dir}/}" | sed -e s/\\//_/g -e s/.c$//)"
    test_file="${root_dir}/test/${id}.c"
    if [[ "${test_file}" -nt "${src_file}" ]]
    then
        return 0
    fi
    {
        echo '/* Automatically generated by script/gen-inline-tests.sh */'
        echo '#include "main.h"'
        echo
        echo "int tests_contra_${id}_setup_each(void **state) { return 0; }"
        echo "int tests_contra_${id}_teardown_each(void **state) { return 0; }"
        echo
    } > "${test_file}"
    parser_on=false
    line_no=0
    while read line
    do
        (( line_no++ ))
        case "${line}" in
        *\#tests* )
            parser_on=true ;;
        *\#endtests* )
            parser_on=false
        ;;
        contra_* )
            add_tests "${test_file}" "${line}" "${line_no}" "${src_file}"
            cache=()
        ;;
        * )
            [[ "${parser_on}" == true ]] && cache+=("${line}") ;;
        esac
    done < "${src_file}"
    return 0
}


add_tests() {
    local dest="${1}"
    local func="${2}"
    local line_no="${3}"
    local src_file="${4}"
    local test_index=0
    for t in "${cache[@]}"
    do
        (( test_index++ ))
        out=$("${script_dir}/_gen-inline-test.py" "${2}" "${t}" "${src_file}" "${line_no}_${test_index}")
        if [[ $? -ne 0 ]]
        then
            echo "failed to generate inline test:"
            echo "  file:     ${src_file}"
            echo "  line no:  ${line_no}"
            echo "  function: ${func}"
            echo "  test:     ${t}"
            exit 1
        fi
        echo "${out}" >> "${dest}"
    done
}


for file in "${@}"
do
    each_file "${file}"
done
